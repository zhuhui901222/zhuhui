<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>blog_zh</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhuhui.club/"/>
  <updated>2020-03-27T16:51:46.930Z</updated>
  <id>http://zhuhui.club/</id>
  
  <author>
    <name>zhuhui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java面试基础</title>
    <link href="http://zhuhui.club/2020/03/27/java/java%E9%9D%A2%E8%AF%95-%E5%9F%BA%E7%A1%80/"/>
    <id>http://zhuhui.club/2020/03/27/java/java%E9%9D%A2%E8%AF%95-%E5%9F%BA%E7%A1%80/</id>
    <published>2020-03-26T16:06:00.000Z</published>
    <updated>2020-03-27T16:51:46.930Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>\</em>1*****</strong>*、面向对象的特征有哪些方面****  </p><p><strong><em>\</em>1.*****</strong>*抽象****：</p><p>抽象就是忽略一个主题中与当前目标无关的那些方面，以便更充分地注意与当前目标有关的方面。抽象并不打算了解全部问题，而只是选择其中的一部分，暂时不用部分细节。抽象包括两个方面，一是过程抽象，二是数据抽象。</p><p><strong><em>\</em>2.*****</strong>*继承****：</p><p>继承是一种联结类的层次模型，并且允许和鼓励类的重用，它提供了一种明确表述共性的方法。对象的一个新类可以从现有的类中派生，这个过程称为类继承。新类继承了原始类的特性，新类称为原始类的派生类（子类），而原始类称为新类的基类（父类）。派生类可以从它的基类那里继承方法和实例变量，并且类可以修改或增加新的方法使之更适合特殊的需要。</p><p><strong><em>\</em>3.*****</strong>*封装****：</p><p>封装是把过程和数据包围起来，对数据的访问只能通过已定义的界面。面向对象计算始于这个基本概念，即现实世界可以被描绘成一系列完全自治、封装的对象，这些对象通过一个受保护的接口访问其他对象。</p><p><strong><em>\</em>4.**</strong> <strong><em>\</em>多态性**</strong>：</p><p>多态性是指允许不同类的对象对同一消息作出响应。多态性包括参数化多态性和包含多态性。多态性语言具有灵活、抽象、行为共享、代码共享的优势，很好的解决了应用程序函数同名问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;1*****&lt;/strong&gt;*、面向对象的特征有哪些方面****  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;1.*****&lt;/strong&gt;*抽象****：&lt;/p&gt;
&lt;p&gt;抽象就是忽略一个主题中与当前目标无关的那些方面，以便
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuhui.club/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>线程池大小设置，CPU的核心数、线程数的关系和区别，同步与堵塞完全是两码事</title>
    <link href="http://zhuhui.club/2020/02/29/java/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%A7%E5%B0%8F%E8%AE%BE%E7%BD%AE%EF%BC%8CCPU%E7%9A%84%E6%A0%B8%E5%BF%83%E6%95%B0%E3%80%81%E7%BA%BF%E7%A8%8B%E6%95%B0%E7%9A%84%E5%85%B3%E7%B3%BB%E5%92%8C%E5%8C%BA%E5%88%AB%EF%BC%8C%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%A0%B5%E5%A1%9E%E5%AE%8C%E5%85%A8%E6%98%AF%E4%B8%A4%E7%A0%81%E4%BA%8B/"/>
    <id>http://zhuhui.club/2020/02/29/java/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%A7%E5%B0%8F%E8%AE%BE%E7%BD%AE%EF%BC%8CCPU%E7%9A%84%E6%A0%B8%E5%BF%83%E6%95%B0%E3%80%81%E7%BA%BF%E7%A8%8B%E6%95%B0%E7%9A%84%E5%85%B3%E7%B3%BB%E5%92%8C%E5%8C%BA%E5%88%AB%EF%BC%8C%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%A0%B5%E5%A1%9E%E5%AE%8C%E5%85%A8%E6%98%AF%E4%B8%A4%E7%A0%81%E4%BA%8B/</id>
    <published>2020-02-29T06:26:00.000Z</published>
    <updated>2020-03-27T16:51:15.874Z</updated>
    
    <content type="html"><![CDATA[<p>线程池应该设置多少线程合适，怎么样估算出来。最近接触到一些相关资料，现作如下总结。</p><p>最开始接触线程池的时候，没有想到就仅仅是设置一个线程池的大小居然还有这么多的学问，汗颜啊。</p><p>首先，需要考虑到线程池所进行的工作的性质：</p><ul><li>IO密集型</li><li>CPU密集型</li></ul><p>简单的分析来看，如果是CPU密集型的任务，我们应该设置数目较小的线程数，比如CPU数目加1。如果是IO密集型的任务，则应该设置可能多的线程数，由于IO操作不占用CPU，所以，不能让CPU闲下来。当然，如果线程数目太多，那么线程切换所带来的开销又会对系统的响应时间带来影响。</p><p>在<a href="https://www.baidu.com/s?wd=《linux多线程服务器端编程》&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">《linux多线程服务器端编程》</a>中有一个思路，CPU计算和IO的阻抗匹配原则。</p><p>如果线程池中的线程在执行任务时，密集<a href="https://www.baidu.com/s?wd=计算所&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">计算所</a>占的时间比重为P(0&lt;P&lt;=1)，而系统一共有C个CPU，为了让CPU跑满而又不过载，线程池的大小经验公式 T = C / P。在此，T只是一个参考，考虑到P的估计并不是很准确，T的最佳估值可以<a href="https://www.baidu.com/s?wd=上下浮动&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">上下浮动</a>50%。</p><p>这个经验公式的原理很简单，T个线程，每个线程占用P的CPU时间，如果刚好占满C个CPU,那么必有 T * P = C。</p><p>下面验证一下边界条件的正确性：</p><p>假设C = 8，P = 1.0，线程池的任务完全是密集计算，那么T = 8。只要8个活动线程就能让8个CPU饱和，再多也没用了，因为CPU资源已经耗光了。</p><p>假设C = 8，P = 0.5，线程池的任务有一半是计算，有一半在等IO上，那么T = 16.考虑操作系统能灵活，合理调度sleeping/writing/running线程，那么大概16个“50%繁忙的线程”能让8个CPU忙个不停。启动更多的线程并不能提高吞吐量，反而因为增加<a href="https://www.baidu.com/s?wd=上下文切换&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">上下文切换</a>的开销而降低性能。</p><p>如果P &lt; 0.2，这个公式就不适用了，T可以取一个固定值，比如 5*C。另外公式里的C不一定是CPU总数，可以是“分配给这项任务的CPU数目”，比如在8核机器上分出4个核来做一项任务，那么C=4</p><p>文章<a href="http://blog.csdn.net/u011519624/article/details/69263460" target="_blank" rel="noopener">如何合理设置线程池大小</a>里面提到了一个公式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最佳线程数目 &#x3D; （（线程等待时间+线程CPU时间）&#x2F;线程CPU时间 ）* CPU数目</span><br></pre></td></tr></table></figure><p>比如平均每个线程CPU运行时间为0.5s，而线程等待时间（非CPU运行时间，比如IO）为1.5s，<a href="https://www.baidu.com/s?wd=CPU核心&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">CPU核心</a>数为8，那么根据上面这个公式估算得到：((0.5+1.5)/0.5)*8=32。这个公式进一步转化为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最佳线程数目 &#x3D; （线程等待时间与线程CPU时间之比 + 1）* CPU数目</span><br></pre></td></tr></table></figure><p>可以得出一个结论：<br>线程等待时间所占比例越高，需要越多线程。线程CPU时间所占比例越高，需要越少线程。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;线程池应该设置多少线程合适，怎么样估算出来。最近接触到一些相关资料，现作如下总结。&lt;/p&gt;
&lt;p&gt;最开始接触线程池的时候，没有想到就仅仅是设置一个线程池的大小居然还有这么多的学问，汗颜啊。&lt;/p&gt;
&lt;p&gt;首先，需要考虑到线程池所进行的工作的性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuhui.club/categories/java/"/>
    
    
      <category term="线程" scheme="http://zhuhui.club/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>PHP7有哪些新功能？</title>
    <link href="http://zhuhui.club/2020/02/24/php/PHP7%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E5%8A%9F%E8%83%BD%EF%BC%9F/"/>
    <id>http://zhuhui.club/2020/02/24/php/PHP7%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E5%8A%9F%E8%83%BD%EF%BC%9F/</id>
    <published>2020-02-24T06:24:00.000Z</published>
    <updated>2020-03-27T16:55:11.746Z</updated>
    
    <content type="html"><![CDATA[<p>新功能</p><p>PHP 7增加了许多特性，其中最重要的特性如下所述</p><p>性能改进——在PHP7中合并了PHPNG代码，速度是PHP 5的两倍。</p><p>较低的内存消耗——优化的PHP 7使用较少的资源。</p><p>标量类型声明——现在可以强制执行参数和返回类型。</p><p>64位支持——对64位体系结构计算机的一致支持。</p><p>异常层次结构——异常层次结构得到改进。</p><p>许多致命错误转换为异常——异常范围增加，包括许多作为异常转换的致命错误。</p><p>安全随机数生成器——添加新的安全随机数生成器API。</p><p>已删除不推荐使用的SAPI和扩展 ——各种旧的和不支持的SAPI和扩展被从最新版本中删除。</p><p>空合并运算符(??)——添加了新的空合并运算符。</p><p>返回类型和标量类型声明——支持添加返回类型和参数类型。</p><p>匿名类——支持添加匿名。</p><p>Zero cost asserts——支持添加Zero cost asserts。</p><p>PHP 7使用新的Zend Engine 3.0来改进应用程序性能，其性能几乎是PHP 5.6的两倍，内存消耗也提高了50%。它允许在不需要任何额外硬件的情况下为更多并发用户提供服务。PHP 7是根据当前的工作负载设计和重构的。</p><p>本篇文章就是关于PHP7的介绍，希望对需要的朋友有所帮助！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新功能&lt;/p&gt;
&lt;p&gt;PHP 7增加了许多特性，其中最重要的特性如下所述&lt;/p&gt;
&lt;p&gt;性能改进——在PHP7中合并了PHPNG代码，速度是PHP 5的两倍。&lt;/p&gt;
&lt;p&gt;较低的内存消耗——优化的PHP 7使用较少的资源。&lt;/p&gt;
&lt;p&gt;标量类型声明——现在可以强制执行参
      
    
    </summary>
    
    
      <category term="php" scheme="http://zhuhui.club/categories/php/"/>
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://zhuhui.club/2020/02/24/go/README/"/>
    <id>http://zhuhui.club/2020/02/24/go/README/</id>
    <published>2020-02-24T06:24:00.000Z</published>
    <updated>2020-03-27T16:56:43.243Z</updated>
    
    <content type="html"><![CDATA[<p>go语言文档</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;go语言文档&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="go" scheme="http://zhuhui.club/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://zhuhui.club/2020/02/24/java/README/"/>
    <id>http://zhuhui.club/2020/02/24/java/README/</id>
    <published>2020-02-24T06:24:00.000Z</published>
    <updated>2020-03-27T16:56:34.018Z</updated>
    
    <content type="html"><![CDATA[<p>java基础 框架 面试等文档</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java基础 框架 面试等文档&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="java" scheme="http://zhuhui.club/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://zhuhui.club/2020/02/24/c++/README/"/>
    <id>http://zhuhui.club/2020/02/24/c++/README/</id>
    <published>2020-02-24T06:24:00.000Z</published>
    <updated>2020-03-27T16:56:51.304Z</updated>
    
    <content type="html"><![CDATA[<p>C++ 数据结构等</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;C++ 数据结构等&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="c++" scheme="http://zhuhui.club/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://zhuhui.club/2020/02/24/linux/README/"/>
    <id>http://zhuhui.club/2020/02/24/linux/README/</id>
    <published>2020-02-24T06:24:00.000Z</published>
    <updated>2020-03-27T16:56:25.122Z</updated>
    
    <content type="html"><![CDATA[<p>linux系统 相关文档</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;linux系统 相关文档&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="linux" scheme="http://zhuhui.club/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://zhuhui.club/2020/02/24/php/README/"/>
    <id>http://zhuhui.club/2020/02/24/php/README/</id>
    <published>2020-02-24T06:24:00.000Z</published>
    <updated>2020-03-27T16:56:07.610Z</updated>
    
    <content type="html"><![CDATA[<p>php开发相关文档</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;php开发相关文档&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="php" scheme="http://zhuhui.club/categories/php/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zhuhui.club/2020/02/24/hello-world/"/>
    <id>http://zhuhui.club/2020/02/24/hello-world/</id>
    <published>2020-02-24T02:18:48.789Z</published>
    <updated>2020-02-24T02:18:48.789Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
